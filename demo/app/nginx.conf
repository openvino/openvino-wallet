# yankee.openvino.org — reverse proxy único por 443 con paths
# Expone:
#   /vc        -> VC REST (8075)
#   /api       -> KrakenD (TLS upstream 5566 -> contenedor 8080)
#   /resolver  -> DID Resolver (8072)
#   /attestation -> Attestation mock (8097)
#   /login     -> Login & Consent (TLS upstream 8099)
#   /registry  -> Trust Registry (TLS upstream 8100)
#   /files     -> Static files (10096)
#   /webhook   -> Webhook sample (8180)
#   /jaeger    -> Jaeger UI (16686)
#   /cognito   -> Cognito mock (9229)

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Redirect HTTP -> HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name yankee.openvino.org;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yankee.openvino.org;

    # TLS (Let's Encrypt)
    ssl_certificate     /etc/letsencrypt/live/yankee.openvino.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yankee.openvino.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Ajustes comunes proxy
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_buffering off;
    client_max_body_size 50m;
    absolute_redirect off;

    # --- VC REST (8075) ---
    location /vc/ {
        proxy_pass http://127.0.0.1:8075/;
        proxy_set_header Host vc-rest-echo.trustbloc.local;
    }

    # --- KrakenD (TLS upstream 5566 -> contenedor 8080) ---
    location /api/ {
        proxy_pass https://127.0.0.1:5566/;
        proxy_set_header Host api-gateway.trustbloc.local;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_name localhost;
    }

    # --- DID Resolver (8072) ---
    location /resolver/ {
        proxy_pass http://127.0.0.1:8072/;
        proxy_set_header Host did-resolver.trustbloc.local;
    }

    # --- Attestation mock (8097) ---
    location /attestation/ {
        proxy_pass http://127.0.0.1:8097/;
        proxy_set_header Host mock-attestation.trustbloc.local;
    }

    # --- Login & Consent (TLS upstream 8099) ---
    location /login/ {
        proxy_pass https://127.0.0.1:8099/;
        proxy_set_header Host mock-login-consent.example.com;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_name localhost;
    }

    # --- Trust Registry (TLS upstream 8100) ---
    location /registry/ {
        proxy_pass https://127.0.0.1:8100/;
        proxy_set_header Host mock-trust-registry.example.com;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_name localhost;
    }

    # --- Static file server (10096) ---
    location /files/ {
        proxy_pass http://127.0.0.1:10096/;
        proxy_set_header Host file-server.trustbloc.local;
    }

    # --- Webhook sample (8180) ---
    location /webhook/ {
        proxy_pass http://127.0.0.1:8180/;
        proxy_set_header Host vcs.webhook.example.com;
    }

    # --- Jaeger UI (16686) ---
    location /jaeger/ {
        proxy_pass http://127.0.0.1:16686/;
    }

    # --- Cognito mock (9229) ---
    location /cognito/ {
        # Preflight opcional (si tu front hace CORS)
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin  "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "*" always;
            add_header Access-Control-Max-Age "86400" always;
            return 204;
        }

        proxy_pass http://127.0.0.1:9229/;
        proxy_set_header Host               cognito-mock.trustbloc.local;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Prefix /cognito;
        proxy_redirect off;
    }

    # Salud rápida
    location = /healthz {
        return 200 'ok';
        add_header Content-Type text/plain;
    }
}
